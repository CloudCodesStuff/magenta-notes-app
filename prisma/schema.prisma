// File: schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String      @id @default(cuid())
  name          String?
  email         String?     @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  notespaces    Notespace[]

  Note Note[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Note {
  id          Int       @id @default(autoincrement())
  content     String
  color       String // color code? Tailwind classes?
  user        User?     @relation(fields: [userId], references: [id])
  userId      String? // Updated the type to String
  notespace   Notespace @relation(fields: [notespaceId], references: [id])
  notespaceId Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Notespace {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  user        User?    @relation(fields: [userId], references: [id])
  userId      String? // Updated the type to String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  notes       Note[]
}
